kind: Deployment
apiVersion:	apps/v1
metadata:
  name: counter-deployment
  labels:
    app: counter
    redis: user
spec:
  replicas: 3
  minReadySeconds: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1  
  selector:
    matchLabels:
      app: counter
      redis: user
  template:
    metadata:
      labels:
        app: counter
        redis: user
    spec:
      containers:
      - name: count
        image: eu.gcr.io/mp-box-dev/hserver:v3
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            httpHeaders:
            - name: X-Liveness
              value: alive
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            httpHeaders:
            - name: X-Liveness
              value: alive
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        lifecycle:
          postStart:
            exec:
              command: ['sh', '-c', 'echo $(date +%s): POST-START >> /timing']
          preStop:
            exec:
              command: ['sh', '-c', 'echo $(date +%s): PRE-HOOK >> /timing']
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        env:
        - name: REDIS_URL
          value: redis-service.orns.svc.cluster.local:6379
        - name: GET_HOSTS_FROM
          value: dns